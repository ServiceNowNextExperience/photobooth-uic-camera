/* Props to https://codepen.io/matevegh
 * https://codepen.io/matevegh/pen/GZVqLL
 */
$timer_unit: 1s;
$timer_length: 600;
$timer_delay: 1s;

@mixin scale_timer($scale) {
  $x: $scale;
  width: 50vmin * $x;
  @debug (vmin);
  height: 50vmin * $x;
  box-shadow: 0 0 0 (1.25vmin * $x),
    inset (2.5vmin * $x) (2.5vmin * $x) (5vmin * $x) rgba(black, 0.125),
    (2.5vmin * $x) (2.5vmin * $x) (5vmin * $x) rgba(black, 0.125);
  font-size: 25vmin * $x;
  text-shadow: (2.5vmin * $x) (2.5vmin * $x) (5vmin * $x) rgba(black, 0.125);
}

/*html
  box-sizing: border-box*/

*,
*:before,
*:after {
  box-sizing: inherit;
}

/*body {
  height: 100vh;
  background-color: #cccccc;
}*/

/* Counting down to take the snapshot */
.countdown {
  #container {
    animation: ($timer_unit * $timer_length)
      ($timer_delay - $timer_unit * 0.125) cubic-bezier(0.9, 0, 0.1, 1) forwards
      background_color;
  }

  #counter {
    font-family: sans-serif;
    @include scale_timer(1.5);
    width: 50%;
    height: 50%;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    display: flex;
    align-items: center;
    justify-content: center;
    overflow: hidden;
    color: white;
    opacity: 75%;
    border-radius: 50%;
    font-weight: 700;

    @media (min-width: 600px) {
      @include scale_timer(1);
    }

    animation: ($timer_unit * $timer_length) $timer_delay forwards
      hide_on_complete;

    &:before {
      content: "#{$timer_length}";
      animation: $timer_unit ($timer_delay - $timer_unit * 0.125) $timer_length
          timer_beat,
        ($timer_unit * $timer_length) $timer_delay timer_countdown;
    }

    @at-root {
      @keyframes timer_beat {
        40% {
        }
        50% {
          transform: scale(1.125);
        }
        80% {
          transform: none;
        }
      }
    }
    @at-root {
      @keyframes timer_countdown {
        @for $i from 0 through $timer_length {
          #{100% / $timer_length * $i} {
            content: "#{-$i + $timer_length}";
          }
        }
      }
    }

    @at-root {
      @keyframes hide_on_complete {
        0% {
          opacity: 1;
        }
        90% {
          opacity: 1;
        }
        100% {
          opacity: 0;
        }
      }
    }

    &:after {
      content: "";
      position: absolute;
      top: 0;
      left: 0;
      z-index: -100;
      width: 100%;
      height: 100%;
      background-color: rgba(black, 0.125);
      animation: ($timer_unit * $timer_length) $timer_delay linear forwards
        timer_indicator;

      @at-root {
        @keyframes timer_indicator {
          100% {
            transform: translateY(100%);
          }
        }
      }
    }
  }
}
